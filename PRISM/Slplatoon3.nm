mdp


const int scale = 63;
const int v_brake = 1 * scale;
const int v_cruise = 4 * scale;
const int v_speed_up = 7 * scale;

const double brake_p1 = 0.7;
const double brake_p2 = 0.15;
const double brake_p3 = 0.15;

const double cruise_p1 = 0.15;
const double cruise_p2 = 0.7;
const double cruise_p3 = 0.15;

const double speed_up_p1 = 0.15;
const double speed_up_p2 = 0.15;
const double speed_up_p3 = 0.7;

const int threshold_far = 5 * scale;
const int threshold_close = 3 * scale;
const int unsafe_rule = 1 * scale;

const int max_pos = 300 * scale;
formula is_not_initial = (p1 >= 0) & (p2 >= 0);
formula is_unsafe = is_not_initial & ((p1 + 0 - p2 - 0 < unsafe_rule));
formula is_run_out = (max_pos - (p1+0) < v_speed_up) | (max_pos - (p2+0) < v_speed_up);


module car1
    p1 : [-1..max_pos];
    [initialization] (p1 = -1) -> (p1' = 630);
    [initialization] (p1 = -1) -> (p1' = 635);
    [initialization] (p1 = -1) -> (p1' = 640);
    [initialization] (p1 = -1) -> (p1' = 645);
    [initialization] (p1 = -1) -> (p1' = 650);
    [initialization] (p1 = -1) -> (p1' = 655);
    [initialization] (p1 = -1) -> (p1' = 660);
    [initialization] (p1 = -1) -> (p1' = 665);
    [initialization] (p1 = -1) -> (p1' = 670);
    [initialization] (p1 = -1) -> (p1' = 675);
    [initialization] (p1 = -1) -> (p1' = 680);
    [initialization] (p1 = -1) -> (p1' = 685);
    [initialization] (p1 = -1) -> (p1' = 690);
    [initialization] (p1 = -1) -> (p1' = 695);
    [initialization] (p1 = -1) -> (p1' = 700);
    [initialization] (p1 = -1) -> (p1' = 705);
    [initialization] (p1 = -1) -> (p1' = 710);
    [initialization] (p1 = -1) -> (p1' = 715);
    [initialization] (p1 = -1) -> (p1' = 720);
    [initialization] (p1 = -1) -> (p1' = 725);
    [initialization] (p1 = -1) -> (p1' = 730);
    [initialization] (p1 = -1) -> (p1' = 735);
    [initialization] (p1 = -1) -> (p1' = 740);
    [initialization] (p1 = -1) -> (p1' = 745);
    [initialization] (p1 = -1) -> (p1' = 750);
    [initialization] (p1 = -1) -> (p1' = 755);
    [initialization] (p1 = -1) -> (p1' = 760);
    [initialization] (p1 = -1) -> (p1' = 765);
    [initialization] (p1 = -1) -> (p1' = 770);
    [initialization] (p1 = -1) -> (p1' = 775);
    [initialization] (p1 = -1) -> (p1' = 780);
    [initialization] (p1 = -1) -> (p1' = 785);
    [initialization] (p1 = -1) -> (p1' = 790);
    [initialization] (p1 = -1) -> (p1' = 795);
    [initialization] (p1 = -1) -> (p1' = 800);
    [initialization] (p1 = -1) -> (p1' = 805);
    [initialization] (p1 = -1) -> (p1' = 810);
    [initialization] (p1 = -1) -> (p1' = 815);
    [initialization] (p1 = -1) -> (p1' = 820);
    [initialization] (p1 = -1) -> (p1' = 825);
    [initialization] (p1 = -1) -> (p1' = 830);
    [initialization] (p1 = -1) -> (p1' = 835);
    [initialization] (p1 = -1) -> (p1' = 840);
    [initialization] (p1 = -1) -> (p1' = 845);
    [initialization] (p1 = -1) -> (p1' = 850);
    [initialization] (p1 = -1) -> (p1' = 855);
    [initialization] (p1 = -1) -> (p1' = 860);
    [initialization] (p1 = -1) -> (p1' = 865);
    [initialization] (p1 = -1) -> (p1' = 870);
    [initialization] (p1 = -1) -> (p1' = 875);
    [initialization] (p1 = -1) -> (p1' = 880);
    [initialization] (p1 = -1) -> (p1' = 885);
    [initialization] (p1 = -1) -> (p1' = 890);
    [initialization] (p1 = -1) -> (p1' = 895);
    [initialization] (p1 = -1) -> (p1' = 900);
    [initialization] (p1 = -1) -> (p1' = 905);
    [initialization] (p1 = -1) -> (p1' = 910);
    [initialization] (p1 = -1) -> (p1' = 915);
    [initialization] (p1 = -1) -> (p1' = 920);
    [initialization] (p1 = -1) -> (p1' = 925);
    [initialization] (p1 = -1) -> (p1' = 930);
    [initialization] (p1 = -1) -> (p1' = 935);
    [initialization] (p1 = -1) -> (p1' = 940);
    [initialization] (p1 = -1) -> (p1' = 945);
    [step] is_not_initial & !is_unsafe & !is_run_out -> (p1' = p1 + v_cruise);
    [stop] is_not_initial & (is_unsafe | is_run_out) -> (p1' = p1);
endmodule


module car2
    p2 : [-1..max_pos];
    [initialization] (p2 = -1) -> (p2' = 0);
    [initialization] (p2 = -1) -> (p2' = 5);
    [initialization] (p2 = -1) -> (p2' = 10);
    [initialization] (p2 = -1) -> (p2' = 15);
    [initialization] (p2 = -1) -> (p2' = 20);
    [initialization] (p2 = -1) -> (p2' = 25);
    [initialization] (p2 = -1) -> (p2' = 30);
    [initialization] (p2 = -1) -> (p2' = 35);
    [initialization] (p2 = -1) -> (p2' = 40);
    [initialization] (p2 = -1) -> (p2' = 45);
    [initialization] (p2 = -1) -> (p2' = 50);
    [initialization] (p2 = -1) -> (p2' = 55);
    [initialization] (p2 = -1) -> (p2' = 60);
    [initialization] (p2 = -1) -> (p2' = 65);
    [initialization] (p2 = -1) -> (p2' = 70);
    [initialization] (p2 = -1) -> (p2' = 75);
    [initialization] (p2 = -1) -> (p2' = 80);
    [initialization] (p2 = -1) -> (p2' = 85);
    [initialization] (p2 = -1) -> (p2' = 90);
    [initialization] (p2 = -1) -> (p2' = 95);
    [initialization] (p2 = -1) -> (p2' = 100);
    [initialization] (p2 = -1) -> (p2' = 105);
    [initialization] (p2 = -1) -> (p2' = 110);
    [initialization] (p2 = -1) -> (p2' = 115);
    [initialization] (p2 = -1) -> (p2' = 120);
    [initialization] (p2 = -1) -> (p2' = 125);
    [initialization] (p2 = -1) -> (p2' = 130);
    [initialization] (p2 = -1) -> (p2' = 135);
    [initialization] (p2 = -1) -> (p2' = 140);
    [initialization] (p2 = -1) -> (p2' = 145);
    [initialization] (p2 = -1) -> (p2' = 150);
    [initialization] (p2 = -1) -> (p2' = 155);
    [initialization] (p2 = -1) -> (p2' = 160);
    [initialization] (p2 = -1) -> (p2' = 165);
    [initialization] (p2 = -1) -> (p2' = 170);
    [initialization] (p2 = -1) -> (p2' = 175);
    [initialization] (p2 = -1) -> (p2' = 180);
    [initialization] (p2 = -1) -> (p2' = 185);
    [initialization] (p2 = -1) -> (p2' = 190);
    [initialization] (p2 = -1) -> (p2' = 195);
    [initialization] (p2 = -1) -> (p2' = 200);
    [initialization] (p2 = -1) -> (p2' = 205);
    [initialization] (p2 = -1) -> (p2' = 210);
    [initialization] (p2 = -1) -> (p2' = 215);
    [initialization] (p2 = -1) -> (p2' = 220);
    [initialization] (p2 = -1) -> (p2' = 225);
    [initialization] (p2 = -1) -> (p2' = 230);
    [initialization] (p2 = -1) -> (p2' = 235);
    [initialization] (p2 = -1) -> (p2' = 240);
    [initialization] (p2 = -1) -> (p2' = 245);
    [initialization] (p2 = -1) -> (p2' = 250);
    [initialization] (p2 = -1) -> (p2' = 255);
    [initialization] (p2 = -1) -> (p2' = 260);
    [initialization] (p2 = -1) -> (p2' = 265);
    [initialization] (p2 = -1) -> (p2' = 270);
    [initialization] (p2 = -1) -> (p2' = 275);
    [initialization] (p2 = -1) -> (p2' = 280);
    [initialization] (p2 = -1) -> (p2' = 285);
    [initialization] (p2 = -1) -> (p2' = 290);
    [initialization] (p2 = -1) -> (p2' = 295);
    [initialization] (p2 = -1) -> (p2' = 300);
    [initialization] (p2 = -1) -> (p2' = 305);
    [initialization] (p2 = -1) -> (p2' = 310);
    [initialization] (p2 = -1) -> (p2' = 315);
    [step] is_not_initial & !is_unsafe & !is_run_out & (p1 + 0 - p2 - 0 < threshold_close) -> brake_p1:(p2' = p2 + v_brake) + brake_p2:(p2' = p2 + v_cruise) + brake_p3:(p2' = p2 + v_speed_up);
    [step] is_not_initial & !is_unsafe & !is_run_out & (p1 + 0 - p2 - 0 >= threshold_close) & (p1 + 0 - p2 - 0 < threshold_far) -> cruise_p1:(p2' = p2 + v_brake) + cruise_p2:(p2' = p2 + v_cruise) + cruise_p3:(p2' = p2 + v_speed_up);
    [step] is_not_initial & !is_unsafe & !is_run_out & (p1 + 0 - p2 - 0 >= threshold_far) -> speed_up_p1:(p2' = p2 + v_brake) + speed_up_p2:(p2' = p2 + v_cruise) + speed_up_p3:(p2' = p2 + v_speed_up);
    [stop] is_not_initial & (is_unsafe | is_run_out) -> (p2' = p2);
endmodule


label "unsafe" = is_unsafe;

